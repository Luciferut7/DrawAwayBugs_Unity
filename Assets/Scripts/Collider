using System.Collections;
using System.Collections.Generic;
using UnityEngine;
 
public class RingCreation : MonoBehaviour {
 
    public int segments;
    public float xradius;
    public float yradius;
    public int gap;
    LineRenderer line;
   
    EdgeCollider2D edge;
    CapsuleCollider2D capsule;
    List<Vector2> colliderPoints = new List<Vector2>();
 
    private void Awake()
    {
        line = GetComponent<LineRenderer>();
        line.SetVertexCount(segments + 1 - (segments / gap));
        line.useWorldSpace = false;
        CreatePoints();
        addCollider();
    }
 
    void CreatePoints()
    {
        float x;
        float y;
        float z = 0f;
 
        float angle = 0f;
 
        for (int i = 0; i < (segments + 1) - (segments / gap); i++)
        {
            x = Mathf.Sin(Mathf.Deg2Rad * angle) * xradius;
            y = Mathf.Cos(Mathf.Deg2Rad * angle) * yradius;
 
            line.SetPosition(i, new Vector3(x, y, z));
 
            Vector3 col = new Vector3(x, y, z);
            colliderPoints.Add(col);
 
            angle += (360f / segments);
        }
    }
 
    void addCollider()
    {
        List<Vector2> colliderPoints2 = new List<Vector2>();
 
        for (int i = 0; i < colliderPoints.Count; i++)
        {
            colliderPoints2.Add(new Vector3(colliderPoints[i].x, colliderPoints[i].y, 0f));
        }
 
        for (int i = colliderPoints.Count - 1; i > 0; i--)
        {
            colliderPoints2.Add(new Vector3(colliderPoints[i].x, colliderPoints[i].y, 0f));
        }
 
        edge = line.gameObject.AddComponent<EdgeCollider2D>();
        edge.points = colliderPoints2.ToArray();
    }
}
